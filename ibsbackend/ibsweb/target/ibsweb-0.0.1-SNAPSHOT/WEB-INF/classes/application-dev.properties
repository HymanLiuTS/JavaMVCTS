server.port=8080
spring.datasource.pecconfig.url=jdbc:postgresql://192.168.5.168:5432/test
spring.datasource.pecconfig.username=postgres
spring.datasource.pecconfig.password=123456
spring.datasource.pecconfig.driver-class-name=org.postgresql.Driver

spring.datasource.pecdata.url=jdbc:postgresql://192.168.5.168:5432/test
spring.datasource.pecdata.username=postgres
spring.datasource.pecdata.password=123456
spring.datasource.pecdata.driver-class-name=org.postgresql.Driver

spring.datasource.business.url=jdbc:postgresql://192.168.5.168:5432/test
spring.datasource.business.username=postgres
spring.datasource.business.password=123456
spring.datasource.business.driver-class-name=org.postgresql.Driver

spring.datasource.activiti.url=jdbc:postgresql://192.168.5.168:5432/test
spring.datasource.activiti.username=postgres
spring.datasource.activiti.password=123456
spring.datasource.activiti.driver-class-name=org.postgresql.Driver


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.business.initialSize=5
spring.datasource.business.minIdle=5
spring.datasource.business.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.business.maxWait=50000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.business.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.business.minEvictableIdleTimeMillis=300000
#spring.datasource.business.validationQuery=SELECT 1 FROM DUAL
spring.datasource.business.testWhileIdle=true
spring.datasource.business.testOnBorrow=false
spring.datasource.business.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.business.poolPreparedStatements=true
spring.datasource.business.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.business.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.business.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
